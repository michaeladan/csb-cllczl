{"version":3,"sources":["components/ToDoItem.jsx","components/App.jsx","index.js"],"names":["ToDoItem","props","_useState","useState","_useState2","_slicedToArray","strike","setStrike","console","log","React","createElement","onClick","style","textDecoration","item","App","inputText","setInputText","_useState3","_useState4","items","setItems","className","onChange","event","newValue","target","value","type","prevItems","concat","_toConsumableArray","map","toDoItem","ReactDOM","render","document","getElementById"],"mappings":"sMAmBeA,MAjBf,SAAkBC,GAChB,IAAAC,EAA4BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAApCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAOxB,OAFAI,QAAQC,IAAIH,GAGVI,IAAAC,cAAA,OAAKC,QANP,WACE,OAAOL,GAAWD,KAMhBI,IAAAC,cAAA,MAAIE,MAAO,CAAEC,eAAgBR,EAAS,eAAiB,SACpDL,EAAMc,QC4BAC,MAtCf,WACE,IAAAd,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvCe,EAASb,EAAA,GAAEc,EAAYd,EAAA,GAC9Be,EAA0BhB,mBAAS,IAAGiB,EAAAf,YAAAc,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GActB,OACEV,IAAAC,cAAA,OAAKY,UAAU,aACbb,IAAAC,cAAA,OAAKY,UAAU,WACbb,IAAAC,cAAA,UAAI,eAEND,IAAAC,cAAA,OAAKY,UAAU,QACbb,IAAAC,cAAA,SAAOa,SAlBb,SAAsBC,GACpB,IAAMC,EAAWD,EAAME,OAAOC,MAC9BV,EAAaQ,IAgBsBG,KAAK,OAAOD,MAAOX,IAClDP,IAAAC,cAAA,UAAQC,QAdd,WACEU,GAAS,SAACQ,GACR,MAAM,GAANC,OAAAC,YAAWF,GAAS,CAAEb,OAExBC,EAAa,MAWPR,IAAAC,cAAA,YAAM,SAGVD,IAAAC,cAAA,WACED,IAAAC,cAAA,UACGU,EAAMY,KAAI,SAACC,GAAQ,OAClBxB,IAAAC,cAACX,EAAQ,CAACe,KAAMmB,WC7B5BC,IAASC,OAAO1B,IAAAC,cAACK,EAAG,MAAKqB,SAASC,eAAe,U","file":"static/js/main.39fa5f13.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction ToDoItem(props) {\n  const [strike, setStrike] = useState(false);\n\n  function getStrike() {\n    return setStrike(!strike);\n  }\n  console.log(strike);\n\n  return (\n    <div onClick={getStrike}>\n      <li style={{ textDecoration: strike ? \"line-through\" : \"none\" }}>\n        {props.item}\n      </li>\n    </div>\n  );\n}\n\nexport default ToDoItem;\n","import React, { useState } from \"react\";\nimport ToDoItem from \"./ToDoItem\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [items, setItems] = useState([]);\n\n  function handleChange(event) {\n    const newValue = event.target.value;\n    setInputText(newValue);\n  }\n\n  function addItem() {\n    setItems((prevItems) => {\n      return [...prevItems, inputText];\n    });\n    setInputText(\"\");\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <div className=\"form\">\n        <input onChange={handleChange} type=\"text\" value={inputText} />\n        <button onClick={addItem}>\n          <span>Add</span>\n        </button>\n      </div>\n      <div>\n        <ul>\n          {items.map((toDoItem) => (\n            <ToDoItem item={toDoItem} />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}